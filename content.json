{"meta":{"title":"Iris","subtitle":"","description":"A personal site","author":"Stark-Yang","url":"http://iris.distars.top","root":"/"},"pages":[{"title":"","date":"2023-09-14T15:49:39.935Z","updated":"2023-09-14T07:32:51.000Z","comments":true,"path":"404.html","permalink":"http://iris.distars.top/404.html","excerpt":"","text":"404 Page Not Found 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"所有分类","date":"2023-09-14T15:49:39.935Z","updated":"2023-09-13T15:46:38.982Z","comments":true,"path":"categories/index.html","permalink":"http://iris.distars.top/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-09-14T15:32:41.342Z","updated":"2023-09-14T15:32:40.174Z","comments":true,"path":"about/index.html","permalink":"http://iris.distars.top/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"网址导航","date":"2023-09-15T08:16:32.700Z","updated":"2023-09-15T08:16:31.545Z","comments":true,"path":"friends/index.html","permalink":"http://iris.distars.top/friends/index.html","excerpt":"视频网站","text":"视频网站 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"所有标签","date":"2023-09-14T15:49:39.935Z","updated":"2023-09-13T15:47:01.784Z","comments":true,"path":"tags/index.html","permalink":"http://iris.distars.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2023-09-14T15:49:39.935Z","updated":"2023-09-13T15:44:35.664Z","comments":true,"path":"mylist/index.html","permalink":"http://iris.distars.top/mylist/index.html","excerpt":"","text":""}],"posts":[{"title":"Redis docker更新后无法启动","slug":"Redis-docker更新后无法启动","date":"2024-07-01T10:00:50.000Z","updated":"2024-07-05T02:33:03.855Z","comments":true,"path":"2024/07/01/Redis-docker更新后无法启动/","link":"","permalink":"http://iris.distars.top/2024/07/01/Redis-docker%E6%9B%B4%E6%96%B0%E5%90%8E%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8/","excerpt":"","text":"今天手贱不小心把Redis给更新了，结果就启动不了了。日志报错如下： 1:M 01 Jul 2024 03:45:35.977 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect. 1:M 01 Jul 2024 03:46:36.263 # Fatal error loading the DB: Invalid argument. Exiting. 1:M 01 Jul 2024 03:46:36.263 # Can’t handle RDB format version 11 1:M 01 Jul 2024 03:46:36.262 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect. 1:M 01 Jul 2024 03:46:36.262 # Server initialized 1:M 01 Jul 2024 03:46:36.262 * Running mode=standalone, port=6379. 1:M 01 Jul 2024 03:46:36.262 * monotonic clock: POSIX clock_gettime 1:C 01 Jul 2024 03:46:36.261 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf 根据日志，Redis出现两个问题导致其无法启动： 1.vm.overcommit_memory参数没有设置为1，需要修改内核参数来解决；2.Fatal error loading the DB: Invalid argument. Exiting 和 Can't handle RDB format version 11 问题，这个错误是因为当前的Redis版本无法处理已有的数据文件（RDB文件）。因为更新Redis版本之后不支持旧版本的数据文件格式。 解决办法如下： 一、修改overcommit_memory参数 因为这时Redis已经无法启动，因而首先需要强行停止Redis容器your_redis_container需要替换为你的容器名称 docker stop your_redis_container 1.临时修改vm.overcommit_memory参数，使其立即生效 sysctl vm.overcommit_memory=1 2.永久修改/etc/sysctl.conf，使用echo命令将配置追加到/etc/sysctl.conf文件中： echo 'vm.overcommit_memory = 1' &gt;&gt; /etc/sysctl.conf 3.使配置生效： sysctl -p 如果在容器中没有权限修改这些文件，也可以进入宿主机来修改。 在宿主机上打开终端。 1.临时修改vm.overcommit_memory参数： sudo sysctl vm.overcommit_memory=1 2.永久修改/etc/sysctl.conf文件： echo 'vm.overcommit_memory = 1' | sudo tee -a /etc/sysctl.conf 3.使配置生效： sudo sysctl -p 4.重启Redis docker restart your_redis_container 二、备份并重新生成RDB文件 1.强制停止容器 首先，确保容器停止： docker stop your_redis_container 2.启动一个临时的容器 启动一个临时容器来备份并删除RDB文件： docker run --rm -it -v /path/to/redis/data:/data busybox sh 注意：将/path/to/redis/data替换为你Redis数据目录的实际路径。 3.备份并删除RDB文件 在临时容器内执行以下命令： 备份现有的RDB文件： cp /data/dump.rdb /data/dump.rdb.bak 删除现有的RDB文件： rm /data/dump.rdb 退出临时容器： exit 4.重启Redis容器 重新启动Redis容器： docker start your_redis_container 5.验证Redis容器状态 检查Redis容器日志以确保它正确启动： docker logs your_redis_container 如果Redis正常启动，且日志不再报错就没有什么问题了。像MySQL和redis这种重要的数据库应用，尽量不要随便升级，很容易会出现各种兼容性问题。","categories":[{"name":"nas","slug":"nas","permalink":"http://iris.distars.top/categories/nas/"},{"name":"日常","slug":"日常","permalink":"http://iris.distars.top/categories/%E6%97%A5%E5%B8%B8/"}],"tags":[{"name":"nas折腾日常","slug":"nas折腾日常","permalink":"http://iris.distars.top/tags/nas%E6%8A%98%E8%85%BE%E6%97%A5%E5%B8%B8/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-08-31T10:09:57.794Z","updated":"2023-08-31T06:55:13.000Z","comments":true,"path":"2023/08/31/hello-world/","link":"","permalink":"http://iris.distars.top/2023/08/31/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post $ hexo new &quot;My New Post&quot; More info: Writing Run server $ hexo server More info: Server Generate static files $ hexo generate More info: Generating Deploy to remote sites $ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"第一章•初识","slug":"my-first-blog","date":"2023-08-31T08:37:27.000Z","updated":"2023-09-14T09:10:39.000Z","comments":true,"path":"2023/08/31/my-first-blog/","link":"","permalink":"http://iris.distars.top/2023/08/31/my-first-blog/","excerpt":"","text":"概述： C 的历史和特性 编写程序的步骤 编译器和连接器 C 标准 1.1 起源 1972 年，贝尔实验室的丹尼斯•里奇（Dennis Ritch）和肯•汤普逊（Ken Thompson）在开发 UNIX 操作系统时，在 B 语言的基础上设计了 C 语言。其作为程序员使用的一种编程工具的设计目的是成为有用的语言。 1.2 特点 C 语言融合了计算机科学理论和实践的控制特性，它的设计理念让用户能轻松完成自上而下的规划、结构化编程和模块化设计。因此用 C 语言编写的程序更易懂、更可靠。 1.2.1 高效性 C 是高效的语音。C 程序相对更加紧凑，而且运行速度很快。实际上，C 语言具有通常是汇编语言才具有的微调控制能力，可以根据具体情况微调程序以获得最大运行速度或最有效地使用内存。 1.2.2 可移植性 C 是可移植的语言。因为许多计算机体系结构都可以使用 C 编译器，在一种系统中编写的 C 程序略作修改甚至不修改就可以在其他系统运行。 1.2.3 强大而灵活 C 语言功能强大且灵活。许多操作系统，如 UNIX；其他语言的编译器和解释器，如 python、BASIC、Perl 等都是由 C 语言编写的。另外 C 程序可以用于解决物理学和工程学的问题，甚至可用于电影特效的制作。 1.2.4 面向程序员 C 语言是为了满足程序员的需求而设计的，程序员利用 C 可以访问硬件、操控内存中的位。C 语言能让程序员简洁地表达自己的意图，但由于其灵活性也可能让使用者犯一些莫名其妙的错误。C 语言在提供更多自由的同时，也让使用者承担了更大的责任。 1.2.5 缺点 如前所述，享受更多的自由就必须承担更大的责任。C 语言紧凑简洁，结合了大量的运算符，因而我们可以编写出让人及其费解的代码。特别是 C 语言使用指针，而涉及指针的编程错误往往难以察觉。 1.3 C 语言的应用范围 早在 20 世纪 80 年代，C 语言就已经成为小型计算机（UINX 系统）使用的主流语言。从此 C 语言的应用范围愈发广阔，许多软件公司都用 C 语言来开发文字处理程序、电子表格、编译器和其他产品，因为 C 语言编写的程序紧凑而高效，更重要的是 C 程序方便修改，而且移植到新系统也非常方便。 即便是现在，C 语言也是最重要的编程语言之一，对程序员来说掌握 C 语言也是一项重要的技能。 1.4 计算机的工作原理 计算机的组成：①中央处理器（CPU）承担绝大部分运算工作； ②随机存储器 （RAM）是存储程序和文件的工作区；③永久内存存储设备，即使在关闭计算机之后，也不会丢失之前存储的程序和文件。还有各种外围设备 ，如键盘、鼠标等。CPU 作为负责程序运行的计算机核心部件，接下来将重点讨论它的工作原理。 CPU的工作是从内存中获得一条指令并执行，随后再从内存中获取下一条指令并执行，以此循环往复。CPU由若干个工作区——寄存器组成，寄存器中存储着下一条指令的内存地址，CPU使用该地址来获取和更新下一条指令。CPU能理解的指令有限，这些指令的集合就叫作指令集 所有内容在计算机中都是以数字的形式储存；计算机程序最终必须以数字指令码，即机器语言，来表示。 简言之，计算机的工作原理是：使用特殊的指令列表（程序），来指导计算机要处理的工作以及怎样处理，然后计算机便会按设定的程序运行 最初，程序都是由计算机能直接理解的语言——机器语言设计的，这是一项十分繁琐、乏味、费力的工作，但现在机器语言编程的时代已经一去不复返了，高级编程语言应运而生。 1.5高级计算机语言和编译器 高级编程语言（如 C）大胆简化了编程工作，让人可以以更贴近自然语言而非数字码的方式来编写指令。而且使用高级编程语言，可以在更抽象的层面表达自己的想法，无须考虑CPU在处理任务时需要执行哪些步骤。例如两数相加可以写成： total = mine + yours 虽然对我们而言，这样的程序是一目了然的，但对计算机来说却是无法理解的乱码，此时就需要编译器。编译器是把高级语言程序翻译为计算机能理解的计算机语言指令集的程序 一般而言，不同CPU制造商使用的指令系统和编码格式都不同，例如使用Intel酷睿CPU编写的机器语言程序放在AMD的锐龙CPU上运行就是鸡同鸭讲。但是只要使用合适的编译器或编译器集就可以将一种高级语言程序翻译成能被不同类型的CPU所能使用的机器语言程序。 简言之，高级语言以更抽象的方式来描述程序员期望的行为，不受限于特定的CPU或指令集。而且相较于机器语言，高级语言更简单易学，也更易于使用。 1.6语言标准 目前，有许多C实现可用。如果要想在实践中做到：在不同实现中运行未使用特定编程技术的C程序时，运行情况都相同。那么不同的实现就要遵循同一个标准 在C语言发展之初，并没有所谓的“C标准”。1978年，布莱恩•柯林汉（Brain Kernighan）和丹尼斯•里奇（Dennis Ritchie）合著的《C语言程序设计》（The C Programming Language）第一版是公认的C标准，通常称之为K＆R C或经典C。特别是该书附录中的“C语言参考手册”已经成为实现C的指导标准。虽然这本书的附录定义了C语言，但却没有定义库。与大多数语言不同的是，C语言更依赖库，但由于缺乏官方标准，UNIX实现提供的库已经成为了标准库。 1.6.1 第一个ANSI/ISO C标准 随着C的不断发展和广泛使用，它的使用者们意识到需要一个更全面、更新颖、更严格的标准。1983年，美国国家标准协会（ANSI）为了开发一套C的新标准而组建了一个委员会（X3J11），新标准（ANSI C）于1989年正式公布，国际标准化组织于1990年采用了这套标准（IOS C）。ANSI C和ISO C是完全相同的标准。ANSI/ISO C标准的最终版本通常被称为C89或C90。 在该委员会制定的指导原则中，有一项是：保持C的精神。该原则具体表述为： 信任程序员 不要妨碍程序员做需要做的事 保持语言精炼简单 只提供一种方法执行一种操作 让程序运行更快，即使不能保证其可移植性 其中最后一点，标准委员会的用意是：作为实现，应该针对目标计算机来定义最合适的某特定操作，而不是强加一个抽象、统一的定义。 1.6.2 C99标准 1994年","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://iris.distars.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"《C Primer Plus》","slug":"《C-Primer-Plus》","permalink":"http://iris.distars.top/tags/%E3%80%8AC-Primer-Plus%E3%80%8B/"}]}],"categories":[{"name":"nas","slug":"nas","permalink":"http://iris.distars.top/categories/nas/"},{"name":"日常","slug":"日常","permalink":"http://iris.distars.top/categories/%E6%97%A5%E5%B8%B8/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://iris.distars.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"nas折腾日常","slug":"nas折腾日常","permalink":"http://iris.distars.top/tags/nas%E6%8A%98%E8%85%BE%E6%97%A5%E5%B8%B8/"},{"name":"《C Primer Plus》","slug":"《C-Primer-Plus》","permalink":"http://iris.distars.top/tags/%E3%80%8AC-Primer-Plus%E3%80%8B/"}]}